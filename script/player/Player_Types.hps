
/////////////////////////////////////////////////
// ENUMS
//////////////////////////////////////////////////

//----------------------------------------------


shared enum eMoveState
{
	eMoveState_Normal,
	eMoveState_Climb,
	eMoveState_Dead,
}

//----------------------------------------------

shared enum ePlayerState
{
	ePlayerState_Normal,
	ePlayerState_Grab,
	ePlayerState_Push,
	ePlayerState_Wheel,
	ePlayerState_Slide,
	ePlayerState_SwingDoor,
	ePlayerState_Lever,
	ePlayerState_Tear,
	ePlayerState_Terminal,
	ePlayerState_HandheldTerminal,
	ePlayerState_Read,
	ePlayerState_Ladder,
	ePlayerState_ClimbLedge,
	ePlayerState_MovingButton,
	ePlayerState_InteractiveCameraAnimation,
	ePlayerState_Sit,
	ePlayerState_Conversation,
	ePlayerState_Dead,
	ePlayerState_ZoomArea,
	ePlayerState_CustomControls,
	ePlayerState_Null
}

//----------------------------------------------

shared enum eCrossHairState
{
	eCrossHairState_None,
	eCrossHairState_Default,
	eCrossHairState_CarryOneHanded,
	eCrossHairState_CarryTwoHanded,
	eCrossHairState_Push,
	eCrossHairState_PullLever,
	eCrossHairState_PullLeverSmall,
	eCrossHairState_PullSideways,
	eCrossHairState_PullOut,
	eCrossHairState_PullDoor,
	eCrossHairState_PullDoorHatch,
	eCrossHairState_Rotate,
	eCrossHairState_RotateOneHanded,
	eCrossHairState_PushButton,
	eCrossHairState_PickUp,
	eCrossHairState_UseTool_Insert,
	eCrossHairState_UseTool_Action,
	eCrossHairState_Terminal,
	eCrossHairState_Datamine,
	eCrossHairState_ClimbLadder,
	eCrossHairState_Talk,
	eCrossHairState_Eat,
	eCrossHairState_Read,
	eCrossHairState_ExitLevel,
	eCrossHairState_ClimbLedge,
	eCrossHairState_SitDown,
	eCrossHairState_DefaultLarge,
	eCrossHairState_DefaultLargeClear,
	eCrossHairState_Examine,
	eCrossHairState_Recharge,
	eCrossHairState_RechargeBad,
	eCrossHairState_TalkBusy,
	eCrossHairState_PullVertical,
	eCrossHairState_FireGun,
	eCrossHairState_NoHints,
	eCrossHairState_LastEnum
}

//----------------------------------------------

shared enum eCameraAddType
{
	eCameraAddType_Crouch,
	eCameraAddType_Bob,
	eCameraAddType_Shake,
	eCameraAddType_Climb,
	eCameraAddType_Terminal,
	eCameraAddType_Script,
	eCameraAddType_Dead,
	eCameraAddType_Lean,
	eCameraAddType_Crawl,
	eCameraAddType_Sway,
	eCameraAddType_Conversation,
}

//----------------------------------------------

shared enum eFootSound
{
	eFootSound_Step,
	eFootSound_Landing
}

//----------------------------------------------

shared enum eFootMoveType
{
	eFootMoveType_Sneak,
	eFootMoveType_Walk,
	eFootMoveType_Run,
	eFootMoveType_LastEnum,
}

//----------------------------------------------

shared enum ePhysicalAction
{
	ePhysicalAction_Climb,
}

//----------------------------------------------

shared enum eDamageType
{
	eDamageType_None,
	eDamageType_Steam,
	eDamageType_Electricity,
	eDamageType_Hit,
	eDamageType_Sun,
}


//----------------------------------------------

shared enum ePlayerRoll
{
	ePlayerRoll_Script,
	ePlayerRoll_Lean,
	ePlayerRoll_Move,
	ePlayerRoll_Climb,
}


//----------------------------------------------

shared enum eVisibilityType
{
	eVisibilityType_Area,
	eVisibilityType_Damage,
	eVisibilityType_HidingInTheDark,
	eVisibilityType_Flashlight,
}

//----------------------------------------------

/////////////////////////////////////////////////
// FUNCTIONS
//////////////////////////////////////////////////

//----------------------------------------------

eCrossHairState PlayerTypes_StringToCrossHairState(const tString&in asStr)
{
	tString sLowerStr = cString_ToLowerCase(asStr);
	
	if(sLowerStr=="none") return eCrossHairState_None;
	if(sLowerStr=="default") return eCrossHairState_Default;
	if(sLowerStr=="carryonehanded") return eCrossHairState_CarryOneHanded;
	if(sLowerStr=="carrytwohanded") return eCrossHairState_CarryTwoHanded;
	if(sLowerStr=="push") return eCrossHairState_Push;
	if(sLowerStr=="pulllever") return eCrossHairState_PullLever;
	if(sLowerStr=="pullleversmall") return eCrossHairState_PullLeverSmall;
	if(sLowerStr=="pullsideways") return eCrossHairState_PullSideways;
	if(sLowerStr=="pullout") return eCrossHairState_PullOut;
	if(sLowerStr=="pulldoor") return eCrossHairState_PullDoor;
	if(sLowerStr=="pulldoorhatch") return eCrossHairState_PullDoorHatch;
	if(sLowerStr=="rotate") return eCrossHairState_Rotate;
	if(sLowerStr=="rotateonehanded") return eCrossHairState_RotateOneHanded;
	if(sLowerStr=="pushbutton") return eCrossHairState_PushButton;
	if(sLowerStr=="pickup") return eCrossHairState_PickUp;
	if(sLowerStr=="usetoolinsert") return eCrossHairState_UseTool_Insert;
	if(sLowerStr=="usetoolaction") return eCrossHairState_UseTool_Action;
	if(sLowerStr=="terminal") return eCrossHairState_Terminal;
	if(sLowerStr=="datamine") return eCrossHairState_Datamine;
	if(sLowerStr=="climbladder") return eCrossHairState_ClimbLadder;
	if(sLowerStr=="talk") return eCrossHairState_Talk;
	if(sLowerStr=="read") return eCrossHairState_Read;
	if(sLowerStr=="eat") return eCrossHairState_Eat;
	if(sLowerStr=="exitlevel") return eCrossHairState_ExitLevel;
	if(sLowerStr=="climbledge") return eCrossHairState_ClimbLedge;
	if(sLowerStr=="sitdown") return eCrossHairState_SitDown;
	if(sLowerStr=="examine") return eCrossHairState_Examine;
	if(sLowerStr=="recharge") return eCrossHairState_Recharge;
	if(sLowerStr=="rechargebad") return eCrossHairState_RechargeBad;
	if(sLowerStr=="talkbusy") return eCrossHairState_TalkBusy;
	if(sLowerStr=="firegun") return eCrossHairState_FireGun;
	
	Error("CrossHairState '"+asStr+"' does not exist");
	return eCrossHairState_None;
}

//----------------------------------------------

/////////////////////////////////////////////////
// CONSTANTS
//////////////////////////////////////////////////

//----------------------------------------------

const float gfPlayer_BodyDefaultMass = 70;

const cVector3f gvBodySize = cVector3f(0.7, 2.0, 0.7);
const cVector3f gvBodyCrouchSize = cVector3f(0.7, 1.2, 0.7);

//----------------------------------------------
